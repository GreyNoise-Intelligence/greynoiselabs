# Generated by ariadne-codegen on 2023-06-16 04:37
# Source: queries

from typing import List

from pydantic import Field

from .base_model import BaseModel


class TopHTTPRequests(BaseModel):
    top_h_t_t_p_requests: "TopHTTPRequestsTopHTTPRequests" = Field(
        alias="topHTTPRequests"
    )


class TopHTTPRequestsTopHTTPRequests(BaseModel):
    query_info: "TopHTTPRequestsTopHTTPRequestsQueryInfo" = Field(alias="queryInfo")
    http_requests: List["TopHTTPRequestsTopHTTPRequestsHttpRequests"] = Field(
        alias="httpRequests"
    )


class TopHTTPRequestsTopHTTPRequestsQueryInfo(BaseModel):
    results_available: int = Field(alias="resultsAvailable")
    results_limit: int = Field(alias="resultsLimit")


class TopHTTPRequestsTopHTTPRequestsHttpRequests(BaseModel):
    method: str
    path: str
    pervasiveness: int
    request_count: int
    request_headers: List[str]
    source_ip_count: int


TopHTTPRequests.update_forward_refs()
TopHTTPRequestsTopHTTPRequests.update_forward_refs()
TopHTTPRequestsTopHTTPRequestsQueryInfo.update_forward_refs()
TopHTTPRequestsTopHTTPRequestsHttpRequests.update_forward_refs()
