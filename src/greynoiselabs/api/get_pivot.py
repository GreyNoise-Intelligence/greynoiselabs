# Generated by ariadne-codegen on 2023-08-18 14:11
# Source: queries

from typing import Any, List, Literal, Union

from pydantic import Field

from .base_model import BaseModel


class GetPivot(BaseModel):
    pivot: Union["GetPivotPivotGNQLResult", "GetPivotPivotPCAPResponse"] = Field(
        discriminator="typename__"
    )


class GetPivotPivotGNQLResult(BaseModel):
    typename__: Literal["GNQLResult"] = Field(alias="__typename")
    queries: List["GetPivotPivotGNQLResultQueries"]


class GetPivotPivotGNQLResultQueries(BaseModel):
    type: str
    urls: List[str]


class GetPivotPivotPCAPResponse(BaseModel):
    typename__: Literal["PCAPResponse"] = Field(alias="__typename")
    id: str
    ips: List["GetPivotPivotPCAPResponseIps"]


class GetPivotPivotPCAPResponseIps(BaseModel):
    key: str
    value: "GetPivotPivotPCAPResponseIpsValue"


class GetPivotPivotPCAPResponseIpsValue(BaseModel):
    first_seen: Any = Field(alias="firstSeen")
    hassh: List[str]
    hostnames: List[str]
    ja3: List[str]
    last_seen: Any = Field(alias="lastSeen")
    paths: List[str]
    port_counts: List["GetPivotPivotPCAPResponseIpsValuePortCounts"] = Field(
        alias="portCounts"
    )
    user_agents: List[str] = Field(alias="userAgents")


class GetPivotPivotPCAPResponseIpsValuePortCounts(BaseModel):
    count: int
    port: str


GetPivot.update_forward_refs()
GetPivotPivotGNQLResult.update_forward_refs()
GetPivotPivotGNQLResultQueries.update_forward_refs()
GetPivotPivotPCAPResponse.update_forward_refs()
GetPivotPivotPCAPResponseIps.update_forward_refs()
GetPivotPivotPCAPResponseIpsValue.update_forward_refs()
GetPivotPivotPCAPResponseIpsValuePortCounts.update_forward_refs()
